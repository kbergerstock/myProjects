; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30040.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BI@CLLIGLLN@MEMORY?5ALLOCATION?5ERROR@	; `string'
PUBLIC	??_R0PEAD@8					; char * `RTTI Type Descriptor'
PUBLIC	_CTA2PEAD
PUBLIC	_CT??_R0PEAD@88
PUBLIC	_TI2PEAD
PUBLIC	??_R0PEAX@8					; void * `RTTI Type Descriptor'
PUBLIC	_CT??_R0PEAX@88
EXTRN	??_U@YAPEAX_K@Z:PROC				; operator new[]
EXTRN	??_V@YAXPEAX@Z:PROC				; operator delete[]
;	COMDAT _CT??_R0PEAX@88
xdata$x	SEGMENT
_CT??_R0PEAX@88 DD 01H
	DD	imagerel ??_R0PEAX@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	08H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PEAX@8
data$r	SEGMENT
??_R0PEAX@8 DQ	FLAT:??_7type_info@@6B@			; void * `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.PEAX', 00H
data$r	ENDS
;	COMDAT _TI2PEAD
xdata$x	SEGMENT
_TI2PEAD DD	00H
	DD	00H
	DD	00H
	DD	imagerel _CTA2PEAD
xdata$x	ENDS
;	COMDAT _CT??_R0PEAD@88
xdata$x	SEGMENT
_CT??_R0PEAD@88 DD 01H
	DD	imagerel ??_R0PEAD@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	08H
	DD	00H
xdata$x	ENDS
;	COMDAT _CTA2PEAD
xdata$x	SEGMENT
_CTA2PEAD DD	02H
	DD	imagerel _CT??_R0PEAD@88
	DD	imagerel _CT??_R0PEAX@88
xdata$x	ENDS
;	COMDAT ??_R0PEAD@8
data$r	SEGMENT
??_R0PEAD@8 DQ	FLAT:??_7type_info@@6B@			; char * `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.PEAD', 00H
data$r	ENDS
;	COMDAT ??_C@_0BI@CLLIGLLN@MEMORY?5ALLOCATION?5ERROR@
CONST	SEGMENT
??_C@_0BI@CLLIGLLN@MEMORY?5ALLOCATION?5ERROR@ DB 'MEMORY ALLOCATION ERROR'
	DB	00H						; `string'
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
PUBLIC	?init@tBitArray@@QEAAXI@Z			; tBitArray::init
PUBLIC	??0tBitArray@@QEAA@XZ				; tBitArray::tBitArray
PUBLIC	?empty@tBitArray@@QEAAXXZ			; tBitArray::empty
;	COMDAT pdata
pdata	SEGMENT
$pdata$?init@tBitArray@@QEAAXI@Z DD imagerel $LN11
	DD	imagerel $LN11+58
	DD	imagerel $unwind$?init@tBitArray@@QEAAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??init@tBitArray@@QEAAXI@Z@4HA DD imagerel ?catch$0@?0??init@tBitArray@@QEAAXI@Z@4HA
	DD	imagerel ?catch$0@?0??init@tBitArray@@QEAAXI@Z@4HA+59
	DD	imagerel $unwind$?catch$0@?0??init@tBitArray@@QEAAXI@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?empty@tBitArray@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+37
	DD	imagerel $unwind$?empty@tBitArray@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?empty@tBitArray@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??init@tBitArray@@QEAAXI@Z@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?init@tBitArray@@QEAAXI@Z DB 02H
	DB	':'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$?init@tBitArray@@QEAAXI@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0??init@tBitArray@@QEAAXI@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?init@tBitArray@@QEAAXI@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$?init@tBitArray@@QEAAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?init@tBitArray@@QEAAXI@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?init@tBitArray@@QEAAXI@Z DB 038H
	DD	imagerel $stateUnwindMap$?init@tBitArray@@QEAAXI@Z
	DD	imagerel $tryMap$?init@tBitArray@@QEAAXI@Z
	DD	imagerel $ip2state$?init@tBitArray@@QEAAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?init@tBitArray@@QEAAXI@Z DD 020a19H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?init@tBitArray@@QEAAXI@Z
; Function compile flags: /Ogtpy
;	COMDAT ?empty@tBitArray@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?empty@tBitArray@@QEAAXXZ PROC				; tBitArray::empty, COMDAT
; File D:\myProjects\projects.cpp\sieve\src\tbitarray.cpp
; Line 31
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 32
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@empty
; Line 33
	call	??_V@YAXPEAX@Z				; operator delete[]
; Line 34
	xor	eax, eax
	mov	QWORD PTR [rbx+8], rax
; Line 35
	mov	DWORD PTR [rbx], eax
$LN2@empty:
; Line 37
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?empty@tBitArray@@QEAAXXZ ENDP				; tBitArray::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0tBitArray@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0tBitArray@@QEAA@XZ PROC				; tBitArray::tBitArray, COMDAT
; File D:\myProjects\projects.cpp\sieve\src\tbitarray.cpp
; Line 10
	xor	eax, eax
	mov	DWORD PTR [rcx], eax
; Line 11
	mov	QWORD PTR [rcx+8], rax
; Line 12
	mov	rax, rcx
	ret	0
??0tBitArray@@QEAA@XZ ENDP				; tBitArray::tBitArray
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?init@tBitArray@@QEAAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
nl$ = 72
?init@tBitArray@@QEAAXI@Z PROC				; tBitArray::init, COMDAT
; File D:\myProjects\projects.cpp\sieve\src\tbitarray.cpp
; Line 14
$LN11:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	rbx, rcx
; Line 15
	cmp	QWORD PTR [rcx+8], 0
	jne	SHORT $LN7@init
; Line 17
	shr	edx, 3
	inc	edx
	mov	DWORD PTR [rcx], edx
; Line 19
	mov	ecx, edx
	call	??_U@YAPEAX_K@Z				; operator new[]
	mov	QWORD PTR [rbx+8], rax
; Line 21
	mov	r8d, DWORD PTR [rbx]
	xor	edx, edx
	mov	rcx, rax
	call	memset
	npad	1
$LN7@init:
; Line 29
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
$LN9@init:
?init@tBitArray@@QEAAXI@Z ENDP				; tBitArray::init
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
nl$ = 72
?catch$0@?0??init@tBitArray@@QEAAXI@Z@4HA PROC		; `tBitArray::init'::`1'::catch$0
; Line 23
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?init@tBitArray@@QEAAXI@Z$0:
; Line 24
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
; Line 25
	mov	QWORD PTR [rax+8], 0
; Line 26
	lea	rax, OFFSET FLAT:??_C@_0BI@CLLIGLLN@MEMORY?5ALLOCATION?5ERROR@
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, OFFSET FLAT:_TI2PEAD
	lea	rcx, QWORD PTR $T1[rbp]
	call	_CxxThrowException
	npad	1
?catch$0@?0??init@tBitArray@@QEAAXI@Z@4HA ENDP		; `tBitArray::init'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
nl$ = 72
?catch$0@?0??init@tBitArray@@QEAAXI@Z@4HA PROC		; `tBitArray::init'::`1'::catch$0
; Line 23
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?init@tBitArray@@QEAAXI@Z$0:
; Line 24
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
; Line 25
	mov	QWORD PTR [rax+8], 0
; Line 26
	lea	rax, OFFSET FLAT:??_C@_0BI@CLLIGLLN@MEMORY?5ALLOCATION?5ERROR@
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, OFFSET FLAT:_TI2PEAD
	lea	rcx, QWORD PTR $T1[rbp]
	call	_CxxThrowException
	npad	1
?catch$0@?0??init@tBitArray@@QEAAXI@Z@4HA ENDP		; `tBitArray::init'::`1'::catch$0
text$x	ENDS
END
